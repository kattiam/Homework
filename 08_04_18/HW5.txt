Задача 5. Написать несколько(~5) тестирующих функций, которые позволят сравнить
две разные реализации кучи на случайных данных разного размера.
Написаны следующие тестирующие функции:
- testAdd - формирование кучи методом последовательного добавления элементов;
- testHeapify - тестирование процедуры упорядочивания кучи;
- testExtractMax - тестирование процедуры выборки максимального элемента 
  с последующим упорядочиваем кучи;
- testChange - тестирование процедуры изменения значения ключа на заданном элементе
    с последующим упорядочиваем кучи;
- testSort - тестирование сортировки.

В качестве ключей использовались числа типа long.
В каждой из тестовых процедур фиксировалось время выполнения.

Для необходимости могу дозалить эту функции.

Ниже приведены результаты тестирования сортировки на разных кучах.
Для тестирования генерировался массив случайных чисел:
    a[i] = rand() % 1000;
(Если использовать % 100, то время выполнения заметно меньше. По-видимому это зависит от того,
что одинаковых чисел намного больше и упорядочивание кучи ускоряется).
 
Len - размер массива в 1000 байт;
Bin - время в милисекундах для кучи на бинарном дереве;
Heap - время в милисекундах для кучи на массиве;

Len   Bin   Heap
10      16     0
100    78    47
200   156   78
300   265  110
400   391  156
500   531  203

Похоже, что времена меньше, чем N*logN.
